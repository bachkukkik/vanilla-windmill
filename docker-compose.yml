x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "${LOG_MAX_SIZE:-20m}"
    max-file: "${LOG_MAX_FILE:-10}"
    compress: "true"

x-shared-env: &shared-windmill-env
  DATABASE_URL: ${DATABASE_URL}
  BASE_URL: ${BASE_URL:-mydomain.com}
  SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET}
  SUPERADMIN_SECRET: ${SUPERADMIN_SECRET:-superadminsecret}
  DENO_AUTH_TOKENS: ${DENO_AUTH_TOKENS:-denoauthsecret}
  WM_MOCKED_API_FILE: ${WM_MOCKED_API_FILE:-/usr/src/api/mocked}
  WORKER_GROUP: ${WORKER_GROUP:-default}
  NUM_WORKERS: ${NUM_WORKERS:-8}
  SLEEP_QUEUE: ${SLEEP_QUEUE:-200}

services:
  postgres:
    deploy:
      # To use an external database, set replicas to 0 and set DATABASE_URL to the external database url in the .env file
      replicas: 1
    image: pgvector/pgvector:pg17
    shm_size: 1g
    restart: unless-stopped
    volumes:  
      - db_data:/var/lib/postgresql/data
    expose:
      - 5432
    # ports:
    #   - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels: 
      - com.centurylinklabs.watchtower.enable=true
      - autoheal-app=true
    networks:
      default:
      cloudflare:
        aliases:
          - ${DB_NETWORK_ALIAS:-vanilla-windmill-db}
    logging: *default-logging

  windmill_server:
    image: ${WM_IMAGE:-ghcr.io/windmill-labs/windmill-main:latest}
    pull_policy: always
    deploy:
      replicas: 1
    restart: unless-stopped
    expose:
      - 8000
      - 2525
    environment:
      <<: *shared-windmill-env
      MODE: server
    depends_on:
      postgres:
        condition: service_healthy
    labels: 
      - com.centurylinklabs.watchtower.enable=true
      - autoheal-app=true
    volumes:
      - worker_logs:/tmp/windmill/logs
      # - server_bin:/usr/src/app
      - ./volumes_windmill/mocked_api:${WM_MOCKED_API_FILE:-/usr/src/api/mocked}
    networks:
      default:
      cloudflare:
    logging: *default-logging

  windmill_worker:
    image: ${WM_IMAGE:-ghcr.io/windmill-labs/windmill-main:latest}
    pull_policy: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: 8
          memory: 16G
          # for GB, use syntax '2G'
    restart: unless-stopped
    environment:
      <<: *shared-windmill-env
      MODE: worker
      WORKER_GROUP: default
    depends_on:
      postgres:
        condition: service_healthy
    labels: 
      - com.centurylinklabs.watchtower.enable=true
      - autoheal-app=true
    # to mount the worker folder to debug, KEEP_JOB_DIR=true and mount /tmp/windmill
    volumes:
      # mount the docker socket to allow to run docker containers from within the workers
      - /var/run/docker.sock:/var/run/docker.sock
      - worker_dependency_cache:/tmp/windmill/cache
      - worker_logs:/tmp/windmill/logs
    networks:
      default:
      cloudflare:
    logging: *default-logging

  ## This worker is specialized for "native" jobs. Native jobs run in-process and thus are much more lightweight than other jobs
  windmill_worker_native:
    # Use ghcr.io/windmill-labs/windmill-ee:main for the ee
    image: ${WM_IMAGE:-ghcr.io/windmill-labs/windmill-main:latest}
    pull_policy: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 2048M
          # for GB, use syntax '2Gi'
    restart: unless-stopped
    environment:
      <<: *shared-windmill-env
      MODE: worker
      WORKER_GROUP: native
      NUM_WORKERS: 8
      SLEEP_QUEUE: 200
    depends_on:
      postgres:
        condition: service_healthy
    labels: 
      - com.centurylinklabs.watchtower.enable=true
      - autoheal-app=true
    volumes:
      - worker_logs:/tmp/windmill/logs
    networks:
      default:
      cloudflare:
    logging: *default-logging
  # This worker is specialized for reports or scraping jobs. It is assigned the "reports" worker group which has an init script that installs chromium and can be targeted by using the "chromium" worker tag.
  windmill_worker_reports:
    image: ${WM_IMAGE:-ghcr.io/windmill-labs/windmill-main:latest}
    pull_policy: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 2048M
          # for GB, use syntax '2Gi'
    restart: unless-stopped
    environment:
      <<: *shared-windmill-env
      MODE: worker
      WORKER_GROUP: reports
    depends_on:
      postgres:
        condition: service_healthy
    labels: 
      - com.centurylinklabs.watchtower.enable=true
      - autoheal-app=true
    # to mount the worker folder to debug, KEEP_JOB_DIR=true and mount /tmp/windmill
    volumes:
      # mount the docker socket to allow to run docker containers from within the workers
      - /var/run/docker.sock:/var/run/docker.sock
      - worker_dependency_cache:/tmp/windmill/cache
      - worker_logs:/tmp/windmill/logs
    networks:
      default:
      cloudflare:
    logging: *default-logging

  # # The indexer powers full-text job and log search, an EE feature.
  # windmill_indexer:
  #   image: ${WM_IMAGE:-ghcr.io/windmill-labs/windmill-main:latest}
  #   pull_policy: always
  #   deploy:
  #     replicas: 0 # set to 1 to enable full-text job and log search
  #   restart: unless-stopped
  #   expose:
  #     - 8001
  #   environment:
  #     <<: *shared-windmill-env
  #     PORT: 8001
  #     MODE: indexer
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - windmill_index:/tmp/windmill/search
  #     - worker_logs:/tmp/windmill/logs
  #   networks:
  #     default:

  lsp:
    image: ghcr.io/windmill-labs/windmill-lsp:latest
    pull_policy: always
    restart: unless-stopped
    expose:
      - 3001
    labels: 
      - com.centurylinklabs.watchtower.enable=true
      - autoheal-app=true
    volumes:
      - lsp_cache:/root/.cache
    networks:
      default:
    logging: *default-logging

  # multiplayer:
  #   image: ghcr.io/windmill-labs/windmill-multiplayer:latest
  #   deploy:
  #     replicas: 0 # Set to 1 to enable multiplayer, only available on Enterprise Edition
  #   restart: unless-stopped
  #   expose:
  #     - 3002
  #   networks:
  #     default:

  caddy:
    image: ghcr.io/windmill-labs/caddy-l4:latest
    restart: unless-stopped
    # Configure the mounted Caddyfile and the exposed ports or use another reverse proxy if needed
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      # - ./certs:/certs # Provide custom certificate files like cert.pem and key.pem to enable HTTPS - See the corresponding section in the Caddyfile
    # ports:
    #   # To change the exposed port, simply change 80:80 to <desired_port>:80. No other changes needed
    #   - 80:80
    #   - 25:25
    #   # - 443:443 # Uncomment to enable HTTPS handling by Caddy
    environment:
      BASE_URL: ":80"
      # BASE_URL: ":443" # uncomment and comment line above to enable HTTPS via custom certificate and key files
      # BASE_URL: ${BASE_URL:-mydomain.com} # Uncomment and comment line above to enable HTTPS handling by Caddy
    labels:
      - traefik.enable=true
      - traefik.http.routers.windmill-caddy.rule=Host(`${BASE_URL}`)
      - traefik.http.routers.windmill-caddy.service=windmill-caddy
      - traefik.http.routers.windmill-caddy.entrypoints=https
      - traefik.http.routers.windmill-caddy.tls=true
      - traefik.http.routers.windmill-caddy.tls.certresolver=myresolver
      - traefik.http.services.windmill-caddy.loadbalancer.server.port=80
      - com.centurylinklabs.watchtower.enable=true
      - autoheal-app=true
    networks:
      default:
      cloudflare:
        aliases:
          - ${CADDY_NETWORK_ALIAS:-vanilla-windmill-caddy}
    logging: *default-logging

volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VOLUME_DOCKER:-/home/pi/docker_volumes}/postgres
  # server_bin:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ${VOLUME_DOCKER:-/home/pi/docker_volumes}/server_bin
  worker_dependency_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VOLUME_DOCKER:-/home/pi/docker_volumes}/worker_dependency_cache
  worker_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VOLUME_DOCKER:-/home/pi/docker_volumes}/worker_logs
  # windmill_index:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ${VOLUME_DOCKER:-/home/pi/docker_volumes}/windmill_index
  lsp_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VOLUME_DOCKER:-/home/pi/docker_volumes}/lsp_cache

networks:
  default:
  cloudflare:
    name: ${CLOUDFLARE_NETWORK:-portainer-cloudflare-traefik_default}
    external: true